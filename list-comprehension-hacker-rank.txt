# list comprehension

Goal:

1. Generate all the cor-ords of the cubiod from the given input of sides

[[0,0,0], [0,0,1], [0,0,2], [0,1,0], [0,1,1], [1,0,0], [1,0,1]]

2. Print an array of elements that donot sum is !=3

Meaning:  

1. [0,0,1] sum is !=3
2. [0,1,1] sum is !=3

3. What the code has to exactly is that:

When I initialize an empty list

x = int(input())
s = [i for i in range (x+1)]
print(s)

>> [0, 1, 2]

Now I have to do the same for other sides as well

==>> Updated Code

x = int(input())
y = int(input()) #update
s = [[i,j] for i in range (x+1) for j in range (y+1)] #update
print(s)

>> 

2

3

[[0, 0], [0, 1], [0, 2], [0, 3], [1, 0], [1, 1], [1, 2], [1, 3], [2, 0], [2, 1], [2, 2], [2, 3]]

==> Updating the code for the third side

x = int(input())
y = int(input())
z = int(input()) # added 1 more side of cubiod
s = [[i,j,k] for i in range (x+1) for j in range (y+1) for k in range (z+1)] #updated the list comprehension
print(s)

4. Now I have to check if the array sum !=n

s = [[i,j,k] for i in range (x+1) for j in range (y+1) for k in range (z+1) if (i+j+k)!=n]
print(s)