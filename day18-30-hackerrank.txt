#hackerrank day 18 queues and stacks

Given:

s = string

Write the following declarations and implementations:

1. Two instance variables: one for your stack and other for Queue

2. A void pushCharacter(char ch) method that pushes a character onto a stack.
3. A void enqueueCharacter(char ch) method that enqueues a character in the queue instance variable.
4. A char popCharacter() method that pops and returns the character at the top of the stack instance variable
5. A char dequeueCharacter() method that dequeues and returns the first character in the queue instance variable

To find: Pallindrome

Solution:

racecar // queue
racecar // stack

1st iteration:

acecar // queue
raceca // stack

2nd iteration:

cecar // queue
racec // stack

3rd iteration:

ecar // queue
race // stack

++

Code:

from collections import dequeue

Class Solution:
	def __init__(self):
		self.stack = []
		self.queue = deque()

	def pushCharacter(self, character):
		self.stack.append(character)
	
	def enqueueCharacter(self, character):
		self.queue.append(character)

	def popCharacter(self):
		return self.stack.pop()
	
	def dequeueCharacter(self):
		return self.queue.popleft()