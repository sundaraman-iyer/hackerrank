Round 2: You need to write code in the most efficient way possible

Given:

1. groupby() from itertools

It takes in 2 parameters: iterable, key_func

iterable: Iterable can be of any kind (list, tuple, dictionary).
key: A function that calculates keys for each element present in iterable.

Return type: Memory Location

What it will do is, when You are using groupby(), then at that point

it will need an iterable, which will go through each element 

And check for how many times an element is repeated in the iterable and returns the memory loc

==> Then you need to convert it to a list and 

Finally You get a list of tuple

Goal:

To print the no.of times a key(a.k.a element) is repeated in a list

Solution:

1. from itertools import groupby

s = input()

for key, group in groupby(s): # iterating the string and taking element and groups
	print(key, group)

#o/p: 
1 <itertools._grouper object at 0x7f7fde5475b0>
2 <itertools._grouper object at 0x7f7fde51bf70>
3 <itertools._grouper object at 0x7f7fde547430>
1 <itertools._grouper object at 0x7f7fde5475b0>


2. Conv to a list

from itertools import groupby

s = input()

for key, group in groupby(s): # iterating the string and taking element and groups
	print(key, list(group))

# o/p:

1 ['1']
2 ['2', '2', '2']
3 ['3']
1 ['1', '1']

3. Now I want the length of the list i.e. no. of times an element is repeated

Hence, use len() # remember: no. of times, total elements all point towards: len()

from itertools import groupby

s = input()

for key, group in groupby(s): # iterating the string and taking element and groups
	print(key, len(list(group)))

4. Changing according to the hackerrank output

from itertools import groupby

s = input()

for key, group in groupby(s): # iterating the string and taking element and groups
	print(len(list(group)), key)

5. Changing it to tuple

from itertools import groupby

s = input()

for key, group in groupby(s): # iterating the string and taking element and groups
	a= len(list(group)), key
	print(tuple(a)) 

# i/p: 1222311

# o/p: 

(1, '1')
(3, '2')
(1, '3')
(2, '1')

6. Changing the key datatype to int

from itertools import groupby

s = input()

for key, group in groupby(s): # iterating the string and taking element and groups
	a= len(list(group)), int(key)
	print(tuple(a))

# o/p:

    (1, 1)

    (3, 2)

    (1, 3)

    (2, 1) 

7. Adding space to the end

from itertools import groupby

s = input()

for key, group in groupby(s): # iterating the string and taking element and groups
	a= len(list(group)), int(key)
	print(tuple(a), end=' ')
